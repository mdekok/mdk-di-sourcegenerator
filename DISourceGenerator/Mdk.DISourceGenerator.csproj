<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFramework>netstandard2.0</TargetFramework>
		<IncludeBuildOutput>false</IncludeBuildOutput>
		<EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>
		<IsRoslynComponent>true</IsRoslynComponent>
		<Nullable>enable</Nullable>
		<LangVersion>latest</LangVersion>
		<Version>1.0.0</Version>
		<Authors>Michel de Kok</Authors>
		<Company>Michel de Kok Software Engineering</Company>
		<PackageIcon>Icon.png</PackageIcon>
		<PackageProjectUrl>https://github.com/mdekok/DISourceGenerator</PackageProjectUrl>
		<RepositoryUrl>https://github.com/mdekok/DISourceGenerator</RepositoryUrl>
		<Description>Dependency injection by setting attributes and using a source generator to register service types.</Description>
		<Title>Dependency injection using attributes and a source generator</Title>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.3.4" PrivateAssets="all" />
		<PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.8.0" PrivateAssets="all" />
		<!-- Add Mdk.DIAttributes to be a transitive reference for clients. So only Mdk.DISourceGenerator has to be referenced by clients. -->
		<PackageReference Include="Mdk.DIAttributes" Version="1.0.0" />
	</ItemGroup>

	<ItemGroup>
		<None Include="Icon.png" Pack="true" PackagePath="\" />
		<None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
	</ItemGroup>

	<ItemGroup>
		<InternalsVisibleTo Include="$(AssemblyName).UnitTests" />
	</ItemGroup>

</Project>
